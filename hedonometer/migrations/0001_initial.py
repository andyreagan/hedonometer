# Generated by Django 3.0.5 on 2020-04-13 16:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('releaseDate', models.DateTimeField(blank=True, null=True)),
                ('label', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('labMTfile', models.CharField(max_length=100)),
                ('filename', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=200)),
                ('language', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('length', models.IntegerField()),
                ('ignorewords', models.CharField(max_length=400)),
                ('wiki', models.URLField()),
            ],
            options={
                'ordering': ('author',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('comment', models.TextField(blank=True, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Embeddable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('h', models.CharField(max_length=64)),
                ('refFile', models.CharField(blank=True, max_length=200)),
                ('refFileName', models.CharField(blank=True, max_length=200)),
                ('compFile', models.CharField(blank=True, max_length=200)),
                ('compFileName', models.CharField(blank=True, max_length=200)),
                ('nickName', models.CharField(default='My super wordshift.', max_length=200)),
                ('customFullText', models.CharField(blank=True, max_length=600)),
                ('customTitleText', models.CharField(blank=True, max_length=200)),
                ('contextFlag', models.CharField(blank=True, max_length=200)),
                ('createdDate', models.DateTimeField(blank=True, null=True)),
                ('updatedDate', models.DateTimeField(blank=True, null=True)),
                ('stopWords', models.CharField(blank=True, max_length=600)),
                ('lang', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='GutenbergAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=100)),
                ('note', models.CharField(blank=True, max_length=100)),
                ('gutenberg_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NYT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('filename', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('numwords', models.FloatField()),
                ('variance', models.FloatField()),
                ('ignorewords', models.CharField(blank=True, max_length=400)),
            ],
            options={
                'ordering': ('genre',),
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genres', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('length', models.IntegerField()),
                ('releaseDate', models.DateTimeField(blank=True, null=True)),
                ('filename', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Timeseries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title to use in the URL.', max_length=100, unique=True)),
                ('directory', models.CharField(help_text='Name of the directory for this particular time series.', max_length=100)),
                ('customLongTitle', models.CharField(default='Average Happiness for Twitter', help_text='Title on the webpage.', max_length=200)),
                ('language', models.CharField(help_text='Second underlined part of the subtitle.', max_length=100)),
                ('mediaFlag', models.CharField(default='All tweets', help_text='Describe the type of data. First part of the subtitle.', max_length=50)),
                ('sumHappsFile', models.CharField(default='sumhapps.csv', help_text='Name of the CSV with date,happs for the full time series.', max_length=100)),
                ('wordVecDir', models.CharField(default='word-vectors', help_text='Directory name with daily word vectors (as subdir of `directory`).', max_length=100)),
                ('shiftDir', models.CharField(default='shifts', help_text='Directory name with daily pre-shifted word vectors (as subdir of `directory`).', max_length=100)),
                ('stopWordList', models.CharField(blank=True, default='stopwords.csv', help_text='Name of the csv of words to exclude.', max_length=100)),
                ('wordListEnglish', models.CharField(default='labMTwords-english-covid.csv', help_text='Name of the csv of words in English.', max_length=100)),
                ('scoreList', models.CharField(default='labMTscores-english-covid.csv', help_text='Name of the csv of scores.', max_length=100)),
                ('sourceDir', models.CharField(default='/users/j/m/jminot/scratch/labmt/storywrangler_en', help_text='Directory on the VACC to pull daily vectors from.', max_length=200)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='WordList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('title', models.CharField(max_length=100, unique=True)),
                ('language', models.CharField(default='english', max_length=50)),
                ('reference', models.URLField()),
                ('referencetitle', models.CharField(default='this paper', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100)),
                ('word_english', models.CharField(blank=True, max_length=200)),
                ('rank', models.IntegerField()),
                ('happs', models.FloatField()),
                ('stdDev', models.FloatField()),
                ('wordlist', models.ForeignKey(default='labMT-en-v1', on_delete=django.db.models.deletion.CASCADE, to='hedonometer.WordList', to_field='title')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('titleraw', models.CharField(max_length=200)),
                ('language', models.CharField(blank=True, max_length=100)),
                ('happs', models.FloatField()),
                ('happsStart', models.FloatField()),
                ('happsEnd', models.FloatField()),
                ('happsVariance', models.FloatField()),
                ('happsMin', models.FloatField()),
                ('happsMax', models.FloatField()),
                ('happsDiff', models.FloatField()),
                ('exclude', models.BooleanField()),
                ('excludeReason', models.CharField(blank=True, max_length=100)),
                ('length', models.IntegerField()),
                ('ignorewords', models.CharField(blank=True, max_length=400)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=400)),
                ('imdbid', models.CharField(blank=True, max_length=400)),
                ('keywords', models.CharField(blank=True, max_length=400)),
                ('metascore', models.CharField(blank=True, max_length=400)),
                ('score', models.CharField(blank=True, max_length=10)),
                ('rating', models.CharField(blank=True, max_length=400)),
                ('releaseDate', models.DateTimeField(blank=True, null=True)),
                ('reviews', models.CharField(blank=True, max_length=400)),
                ('runtime', models.CharField(blank=True, max_length=400)),
                ('storyline', models.CharField(blank=True, max_length=400)),
                ('year', models.CharField(blank=True, max_length=400)),
                ('actor', models.ManyToManyField(to='hedonometer.Actor')),
                ('director', models.ManyToManyField(to='hedonometer.Director')),
                ('writer', models.ManyToManyField(to='hedonometer.Writer')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Happs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('frequency', models.FloatField(default=0)),
                ('timeseries', models.ForeignKey(default='main', on_delete=django.db.models.deletion.CASCADE, to='hedonometer.Timeseries', to_field='title')),
            ],
        ),
        migrations.CreateModel(
            name='GutenbergBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('pickle_object', models.FilePathField(blank=True, null=True)),
                ('language', models.CharField(max_length=100)),
                ('lang_code_id', models.IntegerField(default=-1)),
                ('downloads', models.IntegerField(default=0)),
                ('gutenberg_id', models.IntegerField(blank=True, null=True)),
                ('mobi_file_path', models.FilePathField(blank=True, null=True)),
                ('epub_file_path', models.FilePathField(blank=True, null=True)),
                ('txt_file_path', models.FilePathField(blank=True, null=True)),
                ('expanded_folder_path', models.FilePathField(blank=True, null=True)),
                ('length', models.IntegerField(default=0)),
                ('numUniqWords', models.IntegerField(default=0)),
                ('ignorewords', models.CharField(help_text='Comma separated list of words to ignore from this one.', max_length=400)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('scaling_exponent', models.FloatField(blank=True, help_text='Zipf law fit scaling exponent.', null=True)),
                ('scaling_exponent_top100', models.FloatField(blank=True, help_text='The scaling exponent fit across just the top 100.', null=True)),
                ('exclude', models.BooleanField(default=False)),
                ('excludeReason', models.CharField(blank=True, max_length=100)),
                ('authors', models.ManyToManyField(to='hedonometer.GutenbergAuthor')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.IntegerField(help_text='Centered at 0, higher numbers keep the event on the vizualization as you zoom out, lower numbers hide it earlier.')),
                ('x', models.IntegerField(help_text='x offset of annotation')),
                ('y', models.IntegerField(help_text='y offset of annotation')),
                ('shorter', models.CharField(help_text='Use commas to make new lines on the main visualization label.', max_length=200)),
                ('longer', models.TextField(help_text='Shows up in the description of the event inside shift popups (big and small).', max_length=200)),
                ('wiki', models.URLField()),
                ('happs', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='event', to='hedonometer.Happs')),
            ],
        ),
    ]
