# -*- coding: utf-8 -*-
# Generated by Django 1.11.28 on 2020-03-31 13:43
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('releaseDate', models.DateTimeField(blank=True, null=True)),
                ('label', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('labMTfile', models.CharField(max_length=100)),
                ('filename', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=200)),
                ('language', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('length', models.IntegerField()),
                ('ignorewords', models.CharField(max_length=400)),
                ('wiki', models.URLField()),
            ],
            options={
                'ordering': ('author',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.TextField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Embeddable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('h', models.CharField(max_length=64)),
                ('refFile', models.CharField(blank=True, max_length=200, null=True)),
                ('refFileName', models.CharField(blank=True, max_length=200, null=True)),
                ('compFile', models.CharField(blank=True, max_length=200, null=True)),
                ('compFileName', models.CharField(blank=True, max_length=200, null=True)),
                ('nickName', models.CharField(default=b'My super wordshift.', max_length=200)),
                ('customFullText', models.CharField(blank=True, max_length=600, null=True)),
                ('customTitleText', models.CharField(blank=True, max_length=200, null=True)),
                ('contextFlag', models.CharField(blank=True, max_length=200, null=True)),
                ('createdDate', models.DateTimeField(blank=True, null=True)),
                ('updatedDate', models.DateTimeField(blank=True, null=True)),
                ('stopWords', models.CharField(blank=True, max_length=600, null=True)),
                ('lang', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('value', models.CharField(max_length=20)),
                ('importance', models.IntegerField(help_text=b'Centered at 0, higher numbers keep the event on the vizualization as you zoom out, lower numbers hide it earlier.')),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('picture', models.CharField(blank=True, max_length=200, null=True)),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('shorter', models.CharField(help_text=b'Use commas to make new lines on the main visualization label.', max_length=200)),
                ('longer', models.TextField(help_text=b'Shows up in the description of the event inside shift popups (big and small).', max_length=200)),
                ('wiki', models.URLField()),
                ('imagelink', models.URLField(blank=True, null=True)),
                ('lang', models.CharField(max_length=20)),
                ('region', models.CharField(default=b'world', max_length=100)),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='GeoHapps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('stateId', models.IntegerField()),
                ('stateName', models.CharField(max_length=100)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GutenbergAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=100)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('gutenberg_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GutenbergBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('pickle_object', models.FilePathField(blank=True, null=True)),
                ('language', models.CharField(max_length=100)),
                ('lang_code_id', models.IntegerField(default=-1)),
                ('downloads', models.IntegerField(default=0)),
                ('gutenberg_id', models.IntegerField(blank=True, null=True)),
                ('mobi_file_path', models.FilePathField(blank=True, null=True)),
                ('epub_file_path', models.FilePathField(blank=True, null=True)),
                ('txt_file_path', models.FilePathField(blank=True, null=True)),
                ('expanded_folder_path', models.FilePathField(blank=True, null=True)),
                ('length', models.IntegerField(default=0)),
                ('numUniqWords', models.IntegerField(default=0)),
                ('ignorewords', models.CharField(help_text=b'Comma separated list of words to ignore from this one.', max_length=400)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('scaling_exponent', models.FloatField(blank=True, help_text=b'Zipf law fit scaling exponent.', null=True)),
                ('scaling_exponent_top100', models.FloatField(blank=True, help_text=b'The scaling exponent fit across just the top 100.', null=True)),
                ('exclude', models.BooleanField(default=False)),
                ('excludeReason', models.CharField(blank=True, max_length=100, null=True)),
                ('authors', models.ManyToManyField(to='hedonometer.GutenbergAuthor')),
            ],
        ),
        migrations.CreateModel(
            name='Happs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('value', models.FloatField()),
                ('lang', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('titleraw', models.CharField(max_length=200)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('happs', models.FloatField()),
                ('happsStart', models.FloatField()),
                ('happsEnd', models.FloatField()),
                ('happsVariance', models.FloatField()),
                ('happsMin', models.FloatField()),
                ('happsMax', models.FloatField()),
                ('happsDiff', models.FloatField()),
                ('exclude', models.BooleanField()),
                ('excludeReason', models.CharField(blank=True, max_length=100, null=True)),
                ('length', models.IntegerField()),
                ('ignorewords', models.CharField(blank=True, max_length=400, null=True)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=400, null=True)),
                ('imdbid', models.CharField(blank=True, max_length=400, null=True)),
                ('keywords', models.CharField(blank=True, max_length=400, null=True)),
                ('metascore', models.CharField(blank=True, max_length=400, null=True)),
                ('score', models.CharField(blank=True, max_length=10, null=True)),
                ('rating', models.CharField(blank=True, max_length=400, null=True)),
                ('releaseDate', models.DateTimeField(blank=True, null=True)),
                ('reviews', models.CharField(blank=True, max_length=400, null=True)),
                ('runtime', models.CharField(blank=True, max_length=400, null=True)),
                ('storyline', models.CharField(blank=True, max_length=400, null=True)),
                ('year', models.CharField(blank=True, max_length=400, null=True)),
                ('actor', models.ManyToManyField(to='hedonometer.Actor')),
                ('director', models.ManyToManyField(to='hedonometer.Director')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='NYT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('filename', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('numwords', models.FloatField()),
                ('variance', models.FloatField()),
                ('ignorewords', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'ordering': ('genre',),
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genres', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('happs', models.FloatField()),
                ('length', models.IntegerField()),
                ('releaseDate', models.DateTimeField(blank=True, null=True)),
                ('filename', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Timeseries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('customLongTitle', models.CharField(default=b'Average Happiness for Twitter', max_length=200)),
                ('mediaFlag', models.CharField(default=b'Tweets', max_length=50)),
                ('language', models.CharField(max_length=100)),
                ('regionID', models.CharField(blank=True, max_length=100, null=True)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('sumHappsFile', models.CharField(default=b'sumhapps.csv', help_text=b'dont change this', max_length=100)),
                ('ignoreWords', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100)),
                ('rank', models.IntegerField()),
                ('happs', models.FloatField()),
                ('stdDev', models.FloatField()),
                ('twitterRank', models.IntegerField()),
                ('googleBooksRank', models.IntegerField()),
                ('newYorkTimesRank', models.IntegerField()),
                ('lyricsRank', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='writer',
            field=models.ManyToManyField(to='hedonometer.Writer'),
        ),
    ]
